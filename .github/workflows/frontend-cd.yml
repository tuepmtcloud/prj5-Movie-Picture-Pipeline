name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json
      - name: linting
        run: |
          cd starter/frontend 
          npm ci
          npm run lint
      - name: testing
        run: |
          cd starter/frontend
          npm test
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Amazon ECR "Login" Action for GitHub Actions
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1
      - name: Update the Kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name cluster
      - name: Build, tag, and push docker image to Amazon ECR
        run: |
          export BACKEND_APP_URL=$(kubectl get svc backend -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}{"\n"}{.status.loadBalancer.ingress[0].ip}')
          echo $BACKEND_APP_URL
          cd starter/frontend
          IMAGE_TAG=${{ github.sha }}  # Get the commit SHA
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://$BACKEND_APP_URL --tag 833847858982.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG .
          docker push 833847858982.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG
      - name: Deploy to EKS
        run: |
            cd starter/frontend/k8s
            IMAGE_TAG=${{ github.sha }}  # Get the commit SHA
            kustomize edit set image frontend=833847858982.dkr.ecr.us-east-1.amazonaws.com/frontend:$IMAGE_TAG
            kustomize build | kubectl apply -f -